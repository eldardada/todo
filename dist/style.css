/* http://meyerweb.com/eric/tools/css/reset/
   v5.0.1 | 20191019
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
menu,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
main,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
  display: block;
}

/* HTML5 hidden-attribute fix for newer browsers */

*[hidden] {
  display: none;
}

body {
  line-height: 1;
}

menu,
ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

:root {
  --color-black: #000;
  --color-white: #fff;
  --color-gray: #828282;
  --color-light: #F2F2F2;
  --color-orange: #F2994A;
}

@font-face {
  font-family: "Roboto";
  src: url("./static/fonts/Roboto-Bold.woff") format("woff");
  font-weight: 700;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("./static/fonts/Roboto-Bold.woff2") format("woff2");
  font-weight: 700;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("./static/fonts/Roboto-Medium.woff") format("woff");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("./static/fonts/Roboto-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("./static/fonts/Roboto-Regular.woff") format("woff");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Roboto";
  src: url("./static/fonts/Roboto-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}

body {
  color: var(--color-dark);
  font-size: 15px;
  font-family: "Roboto", sans-serif;
  font-weight: 400;
  background-color: var(--color-white);
}

.plus {
  width: 30px;
  height: 30px;
  fill: var(--color-gray);
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

h1 {
  font-weight: 700;
  line-height: 56px;
  color: var(--color-light);
  text-shadow: 5px 5px 10px rgba(0, 0, 0, 0.1);
}

.arrow_down {
  height: 12px;
  width: 21px;
}

.arrow_left {
  width: 12px;
  height: 21px;
}

.section {
  background-color: rgba(0, 0, 0, 0.06);
  height: calc(100vh - 82px);
}

.section__content {
  padding: 20px;
}

.back {
  cursor: pointer;
  padding: 0;
  border: none;
  background-color: transparent;
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

.back:focus {
  outline: none;
}

.back:hover {
  fill: var(--color-orange);
}

.check_mark {
  height: 24px;
  width: 24px;
  border-radius: 24px;
}

.main-btn {
  cursor: pointer;
  padding: 8px 13px;
  border: 1px solid #828282;
  border-radius: 5px;
  background-color: transparent;
  font-size: 14px;
  -webkit-transition: background-color .3s;
  transition: background-color .3s;
}

.main-btn:hover {
  background-color: rgba(130, 130, 130, 0.3);
}

.main-btn__svg {
  margin-right: 13px;
  vertical-align: middle;
}

.title {
  height: 28px;
  font-weight: 500;
  line-height: 28px;
  color: #333333;
}

.block-color_sm {
  background: #F2C94C;
  border-radius: 5px;
  width: 42px;
  height: 21px;
}

.close {
  width: 24px;
  height: 24px;
}

.round-color {
  min-width: 20px;
  height: 20px;
  border-radius: 20px;
  background-color: #F2C94C;
}

.calendar {
  width: 30px;
  height: 30px;
}

.error {
  outline: 1px solid red;
}

.header {
  background-color: var(--color-orange);
}

.header__container {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  justify-content: space-between;
  padding: 13px 20px;
}

.add {
  cursor: pointer;
  box-sizing: border-box;
  height: 50px;
  width: 50px;
  border-radius: 50px;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  -webkit-box-pack: center;
  justify-content: center;
  text-align: center;
  border: 1px solid #E0E0E0;
  background-color: var(--color-light);
}

.add:hover .plus {
  fill: var(--color-orange);
}

.main {
  position: relative;
}

.main__content {
  display: grid;
  grid-template-columns: 1fr 4.375fr;
}

.aside {
  padding: 60px 25px;
  background-color: #E6E6E6;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.aside__list-type {
  margin-bottom: 20px;
}

.aside.active {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.aside.active ~ .overlay {
  opacity: 1;
  visibility: visible;
}

.overlay {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.4);
  width: 100%;
  opacity: 0;
  top: 0;
  bottom: 0;
  visibility: hidden;
  -webkit-transition: opacity .3s;
  transition: opacity .3s;
}

.list-type > li {
  padding: 10px 0;
  border-radius: 5px;
  -webkit-transition: background-color .3s;
  transition: background-color .3s;
}

.list-type > li:hover {
  background-color: #F2F2F2;
}

.list-type > li:hover input:not(:checked)::after {
  background-color: #000;
}

.list-type__check {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  cursor: pointer;
}

.list-type__check input {
  position: absolute;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.list-type__check input:focus {
  outline: none;
}

.list-type__check input::after {
  content: '';
  display: block;
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  border-radius: 24px;
  border: 1px solid #333;
  -webkit-transition: background-color .3s;
  transition: background-color .3s;
}

.list-type__check input:checked::after {
  border: none;
  content: url(static/img/checkbox-active.svg);
}

.list-type__check strong {
  margin-left: 35px;
}

.aside-priority__title {
  cursor: pointer;
  font-weight: 500;
  font-size: 18px;
  line-height: 21px;
  padding: 10px 0;
  border-bottom: 1px solid #C4C4C4;
}

.aside-priority__title > svg {
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
  -webkit-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  transform-origin: 50% 50%;
  vertical-align: middle;
}

.aside-priority__nested {
  font-size: 18px;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
  -webkit-transform-origin: top left;
  -ms-transform-origin: top left;
  transform-origin: top left;
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
  margin-left: 25px;
}

.aside-priority__nested li {
  cursor: pointer;
  padding: 10px 0;
  -webkit-transition: color .3s;
  transition: color .3s;
}

.aside-priority__nested li:hover {
  color: var(--color-orange);
}

.aside-priority.active .aside-priority__nested {
  -webkit-transform: scaleY(1);
  -ms-transform: scaleY(1);
  transform: scaleY(1);
}

.aside-priority.active svg {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
}

.todo {
  padding-top: 40px;
}

.todo-list {
  width: 100%;
  text-align: left;
}

.todo__row > td,
.todo__row th {
  padding: 20px 0;
  vertical-align: middle;
}

.todo__row > td:not(:last-child),
.todo__row th:not(:last-child) {
  padding-right: 10px;
}

.todo__row > td:last-child,
.todo__row th:last-child {
  text-align: right;
}

.todo__row th {
  font-weight: 500;
}

.todo__row:not(:last-child) {
  border-bottom: 1px solid #C4C4C4;
}

.todo__time {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
}

.todo__time > strong {
  margin-bottom: 5px;
}

.todo__time > small {
  color: #828282;
}

.pen {
  width: 20px;
  height: 20px;
  cursor: pointer;
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

.pen:hover {
  fill: var(--color-orange);
}

.todo-task__title {
  display: inline-block;
  cursor: pointer;
  font-weight: 500;
  margin-bottom: 10px;
}

.todo-task__title::after {
  content: '';
  display: block;
  background-color: var(--color-black);
  height: 1px;
  width: 100%;
}

.todo-task__check {
  margin-right: 20px;
}

.todo-task__subtitle {
  color: #828282;
  white-space: nowrap;
  max-width: 590px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.todo-check {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
}

.todo-check input {
  position: absolute;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.todo-check input:focus {
  outline: none;
}

.todo-check input::after {
  content: '';
  cursor: pointer;
  display: block;
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  border-radius: 24px;
  border: 3px solid #333;
  margin-left: auto;
}

.todo-check input:checked::after {
  border: none;
  content: url(static/img/checkbox-active.svg);
}

.todo-check > span {
  display: block;
  width: 24px;
  height: 8px;
  margin-top: 30px;
  background-color: #EB5757;
  border-radius: 4px;
  margin-left: 4px;
  margin-top: 30px;
}

.task {
  padding-top: 40px;
  display: grid;
  grid-row-gap: 20px;
  display: none;
}

.task-header {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: justify;
  justify-content: space-between;
}

.task-header__left {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
}

.task__task-header {
  margin-bottom: 20px;
}

.task__back {
  margin-right: 20px;
  padding-right: 20px;
  border-right: 1px solid #C4C4C4;
}

.task-info {
  background-color: #fff;
  border-radius: 10px;
  display: -webkit-box;
  display: flex;
  padding: 20px 40px;
}

.task-info__block {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
}

.task-info__block.check .check_mark {
  display: none;
}

.task-info__block > div {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
}

.task-info__block:not(:last-child) {
  border-right: 1px solid #C4C4C4;
  padding-right: 40px;
  margin-right: 40px;
}

.task-info__block small {
  color: #828282;
  margin-bottom: 8px;
}

.task-header .main-btn svg {
  margin: 0 auto;
}

.modal {
  display: -webkit-box;
  display: flex;
  visibility: hidden;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  z-index: 1000;
  overflow: auto;
  padding: 10px;
}

.modal.active {
  visibility: visible;
}

.modal.active ~ .overlay {
  opacity: 1;
  visibility: visible;
}

.modal-content {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  position: relative;
  width: 1120px;
  max-width: 90%;
  grid-gap: 20px;
  border-radius: 20px;
  background-color: #F2F2F2;
  padding: 20px 40px;
  margin: auto auto;
}

.modal .input {
  background: #FFFFFF;
  border-radius: 10px;
  padding: 10px 15px;
}

.modal .input > input,
.modal .input textarea {
  border: none;
  width: 100%;
}

.modal .input > input:focus,
.modal .input textarea:focus {
  outline: none;
}

.modal .input > textarea {
  resize: none;
}

.modal__form {
  margin-bottom: 20px;
}

.modal-form {
  display: grid;
  grid-template-columns: repeat(1fr, 3);
  grid-template-rows: repeat(1fr, 3);
  grid-column-gap: 20px;
  grid-row-gap: 10px;
}

.modal-form input,
.modal-form textarea {
  font-size: 18px;
}

.modal-form p {
  color: #4F4F4F;
  font-size: 14px;
}

.modal-form__name {
  grid-column: 1/4;
}

.modal-form__priority {
  cursor: pointer;
  text-transform: capitalize;
}

.modal-form__priority .input {
  position: relative;
}

.modal-form__priority .input input {
  cursor: pointer;
  text-transform: capitalize;
}

.modal-form__priority .input__nested {
  position: absolute;
  top: calc(100% - 3px);
  left: 0;
  background-color: #fff;
  width: 100%;
  -webkit-transform: scaleY(0);
  -ms-transform: scaleY(0);
  transform: scaleY(0);
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
  -webkit-transform-origin: top;
  -ms-transform-origin: top;
  transform-origin: top;
}

.modal-form__priority .input__nested > li {
  padding: 5px 10px;
  background-color: #F2F2F2;
}

.modal-form__priority .input__nested > li:not(:last-child) {
  border-bottom: 1px solid #858585;
}

.modal-form__priority .input.active .input__nested {
  -webkit-transform: scaleY(1);
  -ms-transform: scaleY(1);
  transform: scaleY(1);
}

.modal-form__priority,
.modal-form__mark,
.modal-form__deadline {
  grid-row: 2/3;
}

.modal-form__priority .input,
.modal-form__mark .input,
.modal-form__deadline .input {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  height: 40px;
  padding: 0 10px;
  font-size: 18px;
}

.modal-form__desc {
  grid-row: 3/4;
  grid-column: 1/4;
  padding-bottom: 40px;
  border-bottom: 1px solid #E0E0E0;
}

.modal-form__desc textarea {
  height: 124px;
}

.modal-form__mark .input {
  display: -webkit-box;
  display: flex;
}

.modal-form__mark .input > span {
  margin-right: 10px;
}

.modal-form__btns {
  grid-column: 1/4;
  margin-top: 10px;
  justify-self: end;
}

.modal-form p {
  display: inline-block;
  margin-bottom: 10px;
}

.modal__title {
  text-align: center;
}

.modal__close {
  position: absolute;
  cursor: pointer;
  top: 25px;
  right: 40px;
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

.modal__close:hover {
  fill: var(--color-orange);
}

.modal__btns {
  margin-left: auto;
}

.modal__cancel {
  border: none;
  background-color: transparent;
}

.modal__success {
  border: 1px solid #828282;
  border-radius: 5px;
  padding: 5px 10px;
}

.modal__success,
.modal__cancel {
  cursor: pointer;
  -webkit-transition: color .3s;
  transition: color .3s;
}

.modal__success:hover,
.modal__cancel:hover {
  color: var(--color-orange);
}

.modal__reset {
  position: absolute;
  bottom: 30px;
  left: 30px;
  padding: 0;
  background-color: transparent;
  border: none;
}

.modal__reset:focus {
  outline: none;
}

.modal__basket {
  width: 18px;
  height: 24px;
  cursor: pointer;
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

.modal__basket:hover {
  fill: var(--color-orange);
}

.md-effect-8.md-modal {
  -webkit-perspective: 1300px;
  perspective: 1300px;
}

.md-effect-8 .md-content {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-transform: rotateY(-70deg);
  transform: rotateY(-70deg);
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  opacity: 0;
}

.active.md-effect-8 .md-content {
  -webkit-transform: rotateY(0deg);
  transform: rotateY(0deg);
  opacity: 1;
}

.md-overlay {
  position: fixed;
  width: 100%;
  visibility: hidden;
  visibility-overflow: auto;
  top: 0;
  left: 0;
  left-bottom: 0;
  z-index: 900;
  opacity: 0;
  background-color: rgba(0, 0, 0, 0.7);
  -webkit-transition: opacity .3s;
  transition: opacity .3s;
}

@media (min-width: 767px) {
  h1 {
    font-size: calc(24px +  24 * ((100vw - 320px) / 1920));
  }

  .title {
    font-size: calc(12px +  12 * ((100vw - 320px) / 1920));
  }

  .todo__row th {
    font-size: calc(10px +  8 * ((100vw - 320px) / 1920));
  }

  .todo__time > strong {
    font-size: calc(10px +  8 * ((100vw - 320px) / 1920));
  }

  .todo__time > small {
    font-size: calc(10px +  4 * ((100vw - 320px) / 1920));
  }

  .todo__priority {
    font-size: calc(12px +  6 * ((100vw - 320px) / 1920));
  }

  .todo-task__title {
    font-size: calc(12px +  6 * ((100vw - 320px) / 1920));
  }

  .todo-task__subtitle {
    font-size: calc(10px +  4 * ((100vw - 320px) / 1920));
  }

  .task-info__block small {
    font-size: calc(10px +  4 * ((100vw - 320px) / 1920));
  }

  .task-info__block strong {
    font-size: calc(12px +  9 * ((100vw - 320px) / 1920));
  }

  .task-text {
    font-size: calc(12px +  6 * ((100vw - 320px) / 1920));
  }

  .modal__title {
    font-size: calc(18px +  18 * ((100vw - 320px) / 1920));
  }
}

@media (min-width: 1920px) {
  h1 {
    font-size: 48;
  }

  .title {
    font-size: 24;
  }

  .todo__row th {
    font-size: 18;
  }

  .todo__time > strong {
    font-size: 18;
  }

  .todo__time > small {
    font-size: 14;
  }

  .todo__priority {
    font-size: 18;
  }

  .todo-task__title {
    font-size: 18;
  }

  .todo-task__subtitle {
    font-size: 14;
  }

  .task-info__block small {
    font-size: 14;
  }

  .task-info__block strong {
    font-size: 21;
  }

  .task-text {
    font-size: 18;
  }

  .modal__title {
    font-size: 36;
  }
}

@media screen and (max-width: 960px) {
  .task-info {
    flex-wrap: wrap;
  }

  .task-info__block {
    flex-basis: 50%;
    -webkit-box-align: center;
    align-items: center;
  }

  .task-info__block:nth-child(-n+2) {
    padding-bottom: 8px;
    border-bottom: 1px solid #F2F2F2;
  }

  .task-info__block:not(:nth-child(-n+2)) {
    padding-top: 8px;
  }

  .task-info__block:not(:last-child) {
    padding-right: 0;
    margin-right: 0;
    border-right: none;
  }
}

@media screen and (max-width: 850px) {
  .task__btn {
    padding: 0;
    width: 40px;
    height: 40px;
  }

  .task__btn svg {
    width: 20px;
    height: 20px;
  }

  .task-header .main-btn span {
    display: none;
  }
}

@media screen and (max-width: 820px) {
  .modal-form__deadline {
    grid-column: 1/4;
    grid-row: 2/3;
  }

  .modal-form__priority {
    grid-column: 1/4;
    grid-row: 3/4;
  }

  .modal-form__mark {
    grid-column: 1/4;
    grid-row: 4/5;
  }

  .modal-form__desc {
    grid-column: 1/4;
    grid-row: 5/6;
  }
}

@media screen and (max-width: 768px) {
  .section__content {
    padding: 10px 10px;
  }

  .block-color_sm {
    width: 30px;
    height: 10px;
  }

  .add {
    width: 30px;
    height: 30px;
  }

  .add .plus {
    width: 20px;
    height: 20px;
  }

  .main__content {
    grid-template-columns: 1fr;
  }

  .aside {
    z-index: 100;
    position: fixed;
    width: 81.25%;
    -webkit-transform: translateX(-1000px);
    -ms-transform: translateX(-1000px);
    transform: translateX(-1000px);
    -webkit-transition: -webkit-transform .3s;
    transition: -webkit-transform .3s;
    transition: transform .3s;
    transition: transform .3s, -webkit-transform .3s;
    top: 82px;
    bottom: 0;
  }

  .todo {
    padding-top: 0;
  }

  .todo__row > td,
  .todo__row th {
    padding: 10px 0;
  }

  .todo__row > td:not(:last-child),
  .todo__row th:not(:last-child) {
    padding-right: 5px;
  }

  .todo-task__subtitle {
    max-width: 250px;
  }

  .task {
    padding-top: 0;
  }

  .task__back {
    padding-right: 15px;
    margin-right: 5px;
  }

  .task-info {
    position: absolute;
    top: 70px;
    left: 0;
    right: 0;
    border-radius: 0;
    padding: 8px 0;
  }

  .task-info__block.check {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    flex-direction: row;
    -webkit-box-pack: center;
    justify-content: center;
  }

  .task-info__block.check .check_mark {
    display: block;
    margin-right: 8px;
  }

  .task-info__block > div {
    -webkit-box-align: center;
    align-items: center;
  }

  .task-text {
    margin-top: 100px;
  }
}

@media (max-width: 767px) {
  h1 {
    font-size: calc(24px + 40.8 * ((100vw - 320px) / 1920));
  }

  .title {
    font-size: calc(12px + 20.4 * ((100vw - 320px) / 1920));
  }

  .todo__row th {
    font-size: calc(10px + 13.6 * ((100vw - 320px) / 1920));
  }

  .todo__time > strong {
    font-size: calc(10px + 13.6 * ((100vw - 320px) / 1920));
  }

  .todo__time > small {
    font-size: calc(10px + 6.8 * ((100vw - 320px) / 1920));
  }

  .todo__priority {
    font-size: calc(12px + 10.2 * ((100vw - 320px) / 1920));
  }

  .todo-task__title {
    font-size: calc(12px + 10.2 * ((100vw - 320px) / 1920));
  }

  .todo-task__subtitle {
    font-size: calc(10px + 6.8 * ((100vw - 320px) / 1920));
  }

  .task-info__block small {
    font-size: calc(10px + 6.8 * ((100vw - 320px) / 1920));
  }

  .task-info__block strong {
    font-size: calc(12px + 15.3 * ((100vw - 320px) / 1920));
  }

  .task-text {
    font-size: calc(12px + 10.2 * ((100vw - 320px) / 1920));
  }

  .modal__title {
    font-size: calc(18px + 30.6 * ((100vw - 320px) / 1920));
  }
}

@media screen and (max-width: 576px) {
  .todo-task__subtitle {
    max-width: 180px;
  }

  .modal-content {
    padding: 15px;
  }

  .modal__close {
    right: 15px;
    top: 20px;
  }
}

@media screen and (max-width: 420px) {
  .todo-task__subtitle {
    max-width: 120px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
